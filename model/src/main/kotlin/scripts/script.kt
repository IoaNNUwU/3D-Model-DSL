@file:Suppress("NonAsciiCharacters")

package scripts

import model.dsl.*

fun main() = model("cabinet1", "Шкаф непонятный") {

    val основной_материал = Material("mlMain", "Основной", "ДСП", 48, 15, "/Img/dsp.jpg") { 84 }

    val ширина = Property("sh", "Ширина", 2000, 3000) { 2300 }

    val minШиринаНижнегоЯщика = 500
    val maxШиринаНижнегоЯщика = 1200
    val maxШиринаБоковогоЯщика = minШиринаНижнегоЯщика
    val minШиринаБоковогоЯщика = maxШиринаБоковогоЯщика / 2

    val ширина_нижнего_ящика = Property("leftYaSh", "Ширина бокового ящика",
        minШиринаНижнегоЯщика, maxШиринаНижнегоЯщика) { maxШиринаНижнегоЯщика - 100 }
    val ширина_бокового_ящика = Property("downYaSh", "Ширина нижнего ящика",
        minШиринаБоковогоЯщика, maxШиринаБоковогоЯщика) { minШиринаБоковогоЯщика + 100 }

    val ширина_раздела_на_верхней_полке = Property("upPolPartSh", "Ширина раздела", 100, 300) { 150 }

    val половина_ширины = ширина / 2
    val половина_ширины_нижнего_ящика = ширина_нижнего_ящика / 2
    val половина_ширины_бокового_ящика = ширина_бокового_ящика / 2

    val высота = Property("vs", "Высота", 2000, 3000) { 2022 }
    val высота_стола = Property("tableVs", "Высота стола", 1000, 1500) { 1200 }
    val высота_нижнего_ящика = Property("downYaVs", "Высота нижнего ящика", 200, 600) { 300 }
    val высота_верхних_ящиков = Property("upYaVs", "Высота верхних ящиков", 100, 500) { 300 }
    val высота_верхней_полки = Property("upPolVs", "Высота верхней полки", 100, 500) { 300 }

    val половина_высоты = высота / 2
    val половина_высоты_стола = высота_стола / 2
    val половина_высоты_нижнего_ящика = высота_нижнего_ящика / 2

    val глубина_нижней_части = Property("downGl", "Глубина нижней части", 700, 1500) { 1200 }
    val глубина_верхней_части = Property("upGl", "Глубина верхней части", 500, 700) { 600 }

    val половина_глубины_нижней_части = глубина_нижней_части / 2
    val половина_глубины_верхней_части = глубина_верхней_части / 2

    val ширина_материала = 18.toProperty()
    val половина_ширины_материала = ширина_материала / 2
    val ширина_материала_дверцы = ширина_материала

    val высота_нижнего_ящика_над_полом = 20.toProperty()
    val половина_высоты_нижнего_ящика_над_полом = высота_нижнего_ящика_над_полом / 2

    ////////////// Нижний ящик ///////////////
    // Левая стенка
    element(основной_материал) {
        x = -половина_ширины - половина_ширины_материала
        y = половина_высоты_нижнего_ящика + половина_высоты_нижнего_ящика_над_полом - половина_ширины_материала
        z = половина_глубины_нижней_части
        dx = ширина_материала
        dy = высота_нижнего_ящика + высота_нижнего_ящика_над_полом - ширина_материала
        dz = глубина_нижней_части
    }
    // Верхняя стенка
    element(основной_материал) {
        x = -половина_ширины + половина_ширины_нижнего_ящика - половина_ширины_материала
        y = высота_нижнего_ящика + высота_нижнего_ящика_над_полом - половина_ширины_материала
        z = половина_глубины_нижней_части
        dx = ширина_нижнего_ящика + ширина_материала
        dy = ширина_материала
        dz = глубина_нижней_части
    }
    // Нижняя
    element(основной_материал) {
        x = -половина_ширины + половина_ширины_нижнего_ящика
        y = высота_нижнего_ящика_над_полом + половина_ширины_материала
        z = половина_глубины_нижней_части
        dx = ширина_нижнего_ящика
        dy = ширина_материала
        dz = глубина_нижней_части
    }
    // Боковая стенка (левая ножка стола)
    element(основной_материал) {
        x = -половина_ширины + ширина_нижнего_ящика + половина_ширины_материала
        y = половина_высоты_стола
        z = половина_глубины_нижней_части
        dx = ширина_материала
        dy = высота_стола
        dz = глубина_нижней_части
    }

    ////////////// Стол ///////////////
    // Поверхность
    element(основной_материал) {
        val ширина_стола = ширина - ширина_бокового_ящика

        x = половина_ширины - ширина_стола / 2
        y = высота_стола + половина_ширины_материала
        z = половина_глубины_нижней_части
        dx = ширина_стола
        dy = ширина_материала
        dz = глубина_нижней_части
    }
    // Правая ножка
    element(основной_материал) {
        x = половина_ширины + половина_ширины_материала
        y = половина_высоты
        z = половина_глубины_верхней_части
        dx = ширина_материала
        dy = высота
        dz = глубина_верхней_части
    }
    // Распорка
    element(основной_материал) {
        val ширина_распорки = ширина - ширина_нижнего_ящика - ширина_материала
        val высота_распорки = 300.toProperty()
        val глубина_распорки = 200.toProperty()

        x = половина_ширины - ширина_распорки / 2
        y = высота_стола - высота_распорки / 2
        z = глубина_распорки + половина_ширины_материала
        dx = ширина_распорки
        dy = высота_распорки
        dz = ширина_материала
    }

    ////////////// Верхняя часть ////////////////
    // Левая стенка
    val высота_верхней_части_стенки = высота - (высота_нижнего_ящика + высота_нижнего_ящика_над_полом)
    element(основной_материал) {
        x = -половина_ширины - половина_ширины_материала
        y = высота_нижнего_ящика_над_полом + высота_нижнего_ящика + высота_верхней_части_стенки / 2
        z = половина_глубины_верхней_части
        dx = ширина_материала
        dy = высота_верхней_части_стенки
        dz = глубина_верхней_части
    }
    // Верхняя стенка (потолок)
    element(основной_материал) {
        x = 0.toProperty()
        y = высота - половина_ширины_материала
        z = половина_глубины_верхней_части
        dx = ширина
        dy = ширина_материала
        dz = глубина_верхней_части
    }

    val внутренняя_глубина_верхней_части = глубина_верхней_части - ширина_материала_дверцы
    val половина_внутренней_глубины_верхней_части = внутренняя_глубина_верхней_части / 2
    val y_нижней_грани_верхних_шкафов = высота - ширина_материала - высота_верхних_ящиков

    // Полка для ящиков
    element(основной_материал) {
        x = 0.toProperty()
        y = y_нижней_грани_верхних_шкафов + половина_ширины_материала
        z = половина_внутренней_глубины_верхней_части
        dx = ширина
        dy = ширина_материала
        dz = внутренняя_глубина_верхней_части
    }
    // Средняя доска в полке для ящиков
    val высота_доски = высота_верхних_ящиков - ширина_материала
    element(основной_материал) {
        val глубина_доски = глубина_верхней_части - ширина_материала - ширина_материала_дверцы

        x = 0.toProperty()
        y = y_нижней_грани_верхних_шкафов + ширина_материала + высота_доски / 2
        z = глубина_доски / 2 + ширина_материала
        dx = ширина_материала
        dy = высота_доски
        dz = глубина_доски
    }
    // Верхняя полка с разделами
    val внутренняя_высота_полки = высота_верхней_полки - ширина_материала
    val ширина_полки = ширина - ширина_бокового_ящика
    element(основной_материал) {
        x = ширина_полки / 2
        y = y_нижней_грани_верхних_шкафов - внутренняя_высота_полки - половина_ширины_материала
        z = половина_внутренней_глубины_верхней_части
        dx = ширина_полки
        dy = ширина_материала
        dz = внутренняя_глубина_верхней_части
    }
    // Правая стенка левого ящика
    val высота_правой_стенки_левого_ящика = высота_верхней_части_стенки - ширина_материала - высота_верхних_ящиков
    val y_правой_стенки_левого_ящика = высота - ширина_материала - высота_верхних_ящиков - высота_правой_стенки_левого_ящика / 2
    element(основной_материал) {
        x = -половина_ширины + ширина_бокового_ящика - половина_ширины_материала
        y = y_правой_стенки_левого_ящика
        z = половина_внутренней_глубины_верхней_части
        dx = ширина_материала
        dy = высота_правой_стенки_левого_ящика
        dz = внутренняя_глубина_верхней_части
    }

    /////////// Задние стенки ////////////
    // Верхние ящики
    element(основной_материал) {
        x = 0.toProperty()
        y = y_нижней_грани_верхних_шкафов + ширина_материала + высота_доски / 2
        z = половина_ширины_материала
        dx = ширина
        dy = высота_доски
        dz = ширина_материала
    }
    // Левый ящик
    element(основной_материал) {
        val внутренняя_ширина_бокового_ящика = ширина_бокового_ящика - ширина_материала
        x = -половина_ширины + внутренняя_ширина_бокового_ящика / 2
        y = y_правой_стенки_левого_ящика
        z = половина_ширины_материала
        dx = внутренняя_ширина_бокового_ящика
        dy = высота_правой_стенки_левого_ящика
        dz = ширина_материала

    }
    // Нижний ящик
    element(основной_материал) {
        x = -половина_ширины + половина_ширины_нижнего_ящика
        y = высота_нижнего_ящика_над_полом + половина_высоты_нижнего_ящика
        z = половина_ширины_материала
        dx = ширина_нижнего_ящика
        dy = высота_нижнего_ящика - 2 * ширина_материала
        dz = ширина_материала
    }
    // Задняя стенка полки
    element(основной_материал) {
        x = ширина_полки / 2
        y = y_нижней_грани_верхних_шкафов - внутренняя_высота_полки / 2
        z = половина_ширины_материала
        dx = ширина_полки
        dy = внутренняя_высота_полки
        dz = ширина_материала
    }

}